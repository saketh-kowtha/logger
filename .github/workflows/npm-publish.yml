# This workflow will run tests using node and then publish a frontend browser-based package to NPM when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Loggify-lite

on:
  push:
    branches:
      - release

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          BROWSER: true

  publish-npm:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.0
          registry-url: https://registry.npmjs.org/
      - name: Upgrade npm
        run: npm install -g npm
      - name: Clean install dependencies
        # This command attempts to do a clean install (npm ci) first
        # If that fails, it falls back to removing node_modules and package-lock.json
        # Then does a fresh npm install as a fallback
        run: npm ci || (rm -rf node_modules package-lock.json && npm install)
      - name: Test browser compatibility
        run: npm run test
        env:
          NODE_ENV: test
          BROWSER: true
      - name: Build browser package
        run: npm run build
      - name: Check bundle size
        run: |
          ls -lh dist/
          gzip -9 < dist/index.js | wc -c
      - name: Publish to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_REGISTERY }}" > .npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_REGISTERY}}
